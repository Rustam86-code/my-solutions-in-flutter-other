// @dart=2.9

import 'package:flutter/material.dart';
import 'package:quittercheck/common/texts/texts.dart';
import 'package:quittercheck/resources/app_colors.dart';

class AppAlertButton extends StatelessWidget {
  const AppAlertButton._({
    Key key,
    @required this.label,
    this.foreground,
    this.background,
    this.onTap,
    this.border = const Border.fromBorderSide(
      BorderSide(color: Colors.transparent),
    ),
  })  : assert(label != null),
        super(key: key);

  factory AppAlertButton.primary({
    Key key,
    @required String label,
    Color customColor,
    VoidCallback onTap,
  }) =>
      AppAlertButton._(
        key: key,
        label: label,
        onTap: onTap,
        background: customColor ?? AppColors.primaryGreen,
        foreground: AppColors.white,
      );

  factory AppAlertButton.outlined({
    Key key,
    @required String label,
    VoidCallback onTap,
  }) =>
      AppAlertButton._(
        key: key,
        label: label,
        onTap: onTap,
        background: AppColors.white,
        foreground: AppColors.primaryGreen,
        border: Border.all(color: AppColors.primaryGreen),
      );

  factory AppAlertButton.secondary({
    Key key,
    @required String label,
    VoidCallback onTap,
  }) =>
      AppAlertButton._(
        key: key,
        label: label,
        onTap: onTap,
        background: AppColors.nGreyForm,
        foreground: AppColors.black,
      );

  factory AppAlertButton.cancelFilled({
    Key key,
    @required String label,
    Color customColor,
    VoidCallback onTap,
  }) =>
      AppAlertButton._(
        key: key,
        label: label,
        onTap: onTap,
        background: customColor ?? AppColors.nErrorRed,
        foreground: AppColors.white,
      );

  factory AppAlertButton.cancelOutlined({
    Key key,
    @required String label,
    VoidCallback onTap,
  }) =>
      AppAlertButton._(
        key: key,
        label: label,
        onTap: onTap,
        background: AppColors.white,
        foreground: AppColors.nErrorRed,
        border: Border.all(color: AppColors.nErrorRed),
      );

  final String label;
  final Color foreground;
  final Color background;
  final VoidCallback onTap;
  final BoxBorder border;

  @override
  Widget build(BuildContext context) {
    final isPortrait =
        MediaQuery.of(context).orientation == Orientation.portrait;

    return Container(
      clipBehavior: Clip.antiAlias,
      constraints: BoxConstraints(minWidth: isPortrait ? 0 : 120),
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(30),
        color: background,
        border: border,
      ),
      child: Material(
        color: Colors.transparent,
        child: InkWell(
          onTap: onTap,
          child: Padding(
            padding: const EdgeInsets.symmetric(vertical: 14, horizontal: 8),
            child: Text(
              label,
              textAlign: TextAlign.center,
              maxLines: 1,
              style: TextStyles.poppins14BoldGrey00.copyWith(
                color: foreground,
              ),
            ),
          ),
        ),
      ),
    );
  }
}
